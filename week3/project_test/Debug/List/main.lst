###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       20/Sep/2023  15:59:06
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\pnu8\Desktop\project_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu8\AppData\Local\Temp\EWD7C9.tmp
#        (C:\Users\pnu8\Desktop\project_test\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu8\Desktop\project_test\Debug\List -o
#        C:\Users\pnu8\Desktop\project_test\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu8\Desktop\project_test\libraries\CMSIS\DeviceSupport\ -I
#        C:\Users\pnu8\Desktop\project_test\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\pnu8\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu8\Desktop\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu8\Desktop\project_test\user\ -I
#        C:\Users\pnu8\Desktop\project_test\user\inc\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  C:\Users\pnu8\Desktop\project_test\Debug\List\main.lst
#    Object file  =  C:\Users\pnu8\Desktop\project_test\Debug\Obj\main.o
#
###############################################################################

C:\Users\pnu8\Desktop\project_test\user\main.c
      1          #include "stm32f10x.h"
      2          
      3          #define RCC_APB2_ENR *(volatile unsigned int *)0x40021018
      4          
      5          #define GPIOA_CRL *(volatile unsigned int *)0x40010800
      6          #define GPIOA_BSRR *(volatile unsigned int *)0x40010810
      7          #define GPIOA_BRR *(volatile unsigned int *)0x40010814
      8          #define GPIOA_IDR *(volatile unsigned int *)0x40010808
      9          
     10          #define GPIOB_CRH *(volatile unsigned int *)0x40010C04
     11          #define GPIOB_BSRR *(volatile unsigned int *)0x40010C10
     12          #define GPIOB_BRR *(volatile unsigned int *)0x40010C14
     13          #define GPIOB_IDR *(volatile unsigned int *)0x40010C08
     14          
     15          #define GPIOC_CRL *(volatile unsigned int *)0x40011000
     16          #define GPIOC_CRH *(volatile unsigned int *)0x40011004
     17          #define GPIOC_BSRR *(volatile unsigned int *)0x40011010
     18          #define GPIOC_BRR *(volatile unsigned int *)0x40011014
     19          #define GPIOC_IDR *(volatile unsigned int *)0x40011008
     20          
     21          #define GPIOD_CRL *(volatile unsigned int *)0x40011400  
     22          #define GPIOD_BSRR *(volatile unsigned int *)0x40011410
     23          #define GPIOD_BRR *(volatile unsigned int *)0x40011414
     24          #define GPIOD_IDR *(volatile unsigned int *)0x40011408
     25          #define GPIOD_ODR *(volatile unsigned int *)0x4001140C
     26          
     27          void delay(uint32_t);
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void delay(__IO uint32_t nCount){
   \                     delay: (+1)
   \   00000000   0xB401             PUSH     {R0}
   \   00000002   0xE002             B.N      ??delay_0
     30            for(; nCount != 0; nCount--){}
   \                     ??delay_1: (+1)
   \   00000004   0x9800             LDR      R0,[SP, #+0]
   \   00000006   0x1E40             SUBS     R0,R0,#+1
   \   00000008   0x9000             STR      R0,[SP, #+0]
   \                     ??delay_0: (+1)
   \   0000000A   0x9800             LDR      R0,[SP, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD1F9             BNE.N    ??delay_1
     31          }
   \   00000010   0xB001             ADD      SP,SP,#+4
   \   00000012   0x4770             BX       LR               ;; return
     32          
     33          
     34          

   \                                 In section .text, align 2, keep-with-next
     35          int main(void)
     36          {
   \                     main: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     37           
     38            RCC_APB2_ENR = 0x3C; // RCC clock enable
   \   00000002   0x203C             MOVS     R0,#+60
   \   00000004   0x....             LDR.N    R1,??DataTable1  ;; 0x40021018
   \   00000006   0x6008             STR      R0,[R1, #+0]
     39           
     40            GPIOD_CRL = 0x44444444;
   \   00000008   0xF05F 0x3044      MOVS     R0,#+1145324612
   \   0000000C   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40011400
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     41            GPIOC_CRH = 0x44444444;
   \   00000010   0xF05F 0x3044      MOVS     R0,#+1145324612
   \   00000014   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40011004
   \   00000016   0x6008             STR      R0,[R1, #+0]
     42            GPIOC_CRL = 0x44444444;
   \   00000018   0xF05F 0x3044      MOVS     R0,#+1145324612
   \   0000001C   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40011000
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     43            GPIOB_CRH = 0x44444444;
   \   00000020   0xF05F 0x3044      MOVS     R0,#+1145324612
   \   00000024   0x....             LDR.N    R1,??DataTable1_4  ;; 0x40010c04
   \   00000026   0x6008             STR      R0,[R1, #+0]
     44            GPIOA_CRL = 0x44444444;
   \   00000028   0xF05F 0x3044      MOVS     R0,#+1145324612
   \   0000002C   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40010800
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     45          
     46            GPIOD_CRL = 0x10011100; // LED(PD2, PD3, PD4, PD7)
   \   00000030   0x....             LDR.N    R0,??DataTable1_6  ;; 0x10011100
   \   00000032   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40011400
   \   00000034   0x6008             STR      R0,[R1, #+0]
     47           
     48            //GPIOC_CRL = 0x00000008; // button1(PC4)
     49            //GPIOC_CRH = 0x00002000; // button3(PC13)
     50            //GPIOB_CRH = 0x00000400; // button2(PB10)
     51            //GPIOA_CRL = 0x00000001; // button4(PA0)
     52           
     53            GPIOD_BSRR = 0x00000000; // all led reset
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     54           
     55            int led1 = 0, led2 = 0, led3 = 0, led4 = 0; // led state
   \   0000003C   0x2400             MOVS     R4,#+0
   \   0000003E   0x2500             MOVS     R5,#+0
   \   00000040   0x2600             MOVS     R6,#+0
   \   00000042   0x2700             MOVS     R7,#+0
   \   00000044   0xE009             B.N      ??main_0
     56           
     57            while(1) {
     58              // press button1
     59              if (~GPIOC_IDR & 0x10){
     60                // led on
     61                if (led1 == 1){ 
     62                  GPIOD_BSRR |= 0x240000;
     63                  led1 = 0;
     64                }
     65                // led off
     66                else {
     67                  GPIOD_BSRR |=  0x04;
     68                  led1 = 1;
     69                }
     70                delay(1000000);
     71              }
     72             
     73          
     74              // press button2
     75              if (~GPIOB_IDR & 0x400) {
     76                // led on
     77                if (led2 == 1){
     78                  
     79                  GPIOD_BSRR |= 0x80000;
     80                  led2 = 0;
     81                }
     82                // led off
     83                else {
     84                   GPIOD_BSRR |= 0x08;
     85                   led2 = 1;
     86                }
     87                delay(1000000);
     88              }
     89             
     90              // press button3
     91              if (~GPIOC_IDR & 0x2000) {
     92                // led on
     93                if (led3 == 1){
     94                  GPIOD_BSRR |= 0x100000;
     95                  led3 = 0;
     96                }
     97                // led off
     98                else {
     99                   GPIOD_BSRR |=  0x10;
    100                   led3 = 1;
    101                }
    102                delay(1000000);
    103              }
    104             
    105              // press button4
    106              if (~GPIOA_IDR & 0x01){
    107                // led on
    108                if (led4 == 1){
    109                  GPIOD_BSRR |= 0x800000;
    110                  led4 = 0;
    111                }
    112                // led off
    113                else {
    114                   GPIOD_BSRR |=  0x80;
   \                     ??main_1: (+1)
   \   00000046   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000004E   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   00000050   0x6008             STR      R0,[R1, #+0]
    115                   led4 = 1;
   \   00000052   0x2701             MOVS     R7,#+1
    116                }
    117                delay(1000000);
   \                     ??main_2: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable1_8  ;; 0xf4240
   \   00000056   0x.... 0x....      BL       delay
   \                     ??main_0: (+1)
   \   0000005A   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011008
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x43C0             MVNS     R0,R0
   \   00000060   0x06C0             LSLS     R0,R0,#+27
   \   00000062   0xD513             BPL.N    ??main_3
   \   00000064   0x2C01             CMP      R4,#+1
   \   00000066   0xD107             BNE.N    ??main_4
   \   00000068   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0xF450 0x1010      ORRS     R0,R0,#0x240000
   \   00000070   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   00000072   0x6008             STR      R0,[R1, #+0]
   \   00000074   0x2400             MOVS     R4,#+0
   \   00000076   0xE006             B.N      ??main_5
   \                     ??main_4: (+1)
   \   00000078   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000080   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   00000082   0x6008             STR      R0,[R1, #+0]
   \   00000084   0x2401             MOVS     R4,#+1
   \                     ??main_5: (+1)
   \   00000086   0x....             LDR.N    R0,??DataTable1_8  ;; 0xf4240
   \   00000088   0x.... 0x....      BL       delay
   \                     ??main_3: (+1)
   \   0000008C   0x....             LDR.N    R0,??DataTable1_10  ;; 0x40010c08
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x43C0             MVNS     R0,R0
   \   00000092   0x0540             LSLS     R0,R0,#+21
   \   00000094   0xD513             BPL.N    ??main_6
   \   00000096   0x2D01             CMP      R5,#+1
   \   00000098   0xD107             BNE.N    ??main_7
   \   0000009A   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   000000A2   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   \   000000A6   0x2500             MOVS     R5,#+0
   \   000000A8   0xE006             B.N      ??main_8
   \                     ??main_7: (+1)
   \   000000AA   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000B2   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   000000B4   0x6008             STR      R0,[R1, #+0]
   \   000000B6   0x2501             MOVS     R5,#+1
   \                     ??main_8: (+1)
   \   000000B8   0x....             LDR.N    R0,??DataTable1_8  ;; 0xf4240
   \   000000BA   0x.... 0x....      BL       delay
   \                     ??main_6: (+1)
   \   000000BE   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011008
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x43C0             MVNS     R0,R0
   \   000000C4   0x0480             LSLS     R0,R0,#+18
   \   000000C6   0xD513             BPL.N    ??main_9
   \   000000C8   0x2E01             CMP      R6,#+1
   \   000000CA   0xD107             BNE.N    ??main_10
   \   000000CC   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0xF450 0x1080      ORRS     R0,R0,#0x100000
   \   000000D4   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   000000D6   0x6008             STR      R0,[R1, #+0]
   \   000000D8   0x2600             MOVS     R6,#+0
   \   000000DA   0xE006             B.N      ??main_11
   \                     ??main_10: (+1)
   \   000000DC   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000E4   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   000000E6   0x6008             STR      R0,[R1, #+0]
   \   000000E8   0x2601             MOVS     R6,#+1
   \                     ??main_11: (+1)
   \   000000EA   0x....             LDR.N    R0,??DataTable1_8  ;; 0xf4240
   \   000000EC   0x.... 0x....      BL       delay
   \                     ??main_9: (+1)
   \   000000F0   0x....             LDR.N    R0,??DataTable1_11  ;; 0x40010808
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x43C0             MVNS     R0,R0
   \   000000F6   0x07C0             LSLS     R0,R0,#+31
   \   000000F8   0xD5AF             BPL.N    ??main_0
   \   000000FA   0x2F01             CMP      R7,#+1
   \   000000FC   0xD1A3             BNE.N    ??main_1
   \   000000FE   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40011410
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000106   0x....             LDR.N    R1,??DataTable1_7  ;; 0x40011410
   \   00000108   0x6008             STR      R0,[R1, #+0]
   \   0000010A   0x2700             MOVS     R7,#+0
   \   0000010C   0xE7A2             B.N      ??main_2
    118              }
    119          
    120            }
    121            return 0;
                   ^
Warning[Pe111]: statement is unreachable
    122           }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40011400         DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40011004         DC32     0x40011004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40010C04         DC32     0x40010c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x10011100         DC32     0x10011100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x40011410         DC32     0x40011410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40011008         DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x40010C08         DC32     0x40010c08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x40010808         DC32     0x40010808

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   delay
      24   main
        24   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      20  delay
     270  main

 
 338 bytes in section .text
 
 338 bytes of CODE memory

Errors: none
Warnings: 1
